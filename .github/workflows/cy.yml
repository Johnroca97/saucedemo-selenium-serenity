name: Serenity BDD Automation Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Ejecutar todos los días a las 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      test_tags:
        description: 'Tags de pruebas a ejecutar'
        required: false
        default: '@SauceDemo'
        type: choice
        options:
          - '@SauceDemo'
          - '@smoke'
          - '@complete-flow'
          - '@negative'

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        browser: [firefox]
        java: [21]

    steps:
      - name: Checkout código
        uses: actions/checkout@v4

      - name: Setup Java JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          cache: 'maven'

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Setup Firefox
        uses: browser-actions/setup-firefox@latest
        with:
          firefox-version: 'latest-esr'

      - name: Install Xvfb (Virtual Display)
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb

      - name: Verificar versiones
        run: |
          echo "Java version:"
          java -version
          echo "Maven version:"
          mvn -version
          echo "Firefox version:"
          firefox --version

      - name: Ejecutar pruebas con JUnit Platform
        run: |
          export DISPLAY=:99
          Xvfb :99 -screen 0 1920x1080x24 > /dev/null 2>&1 &
          sleep 3
          mvn clean verify \
            -Dcucumber.filter.tags="${{ github.event.inputs.test_tags || '@SauceDemo' }}" \
            -Dwebdriver.driver=firefox \
            -Dwebdriver.headless=true \
            -Dserenity.browser.maximized=true \
            -Dserenity.take.screenshots=FOR_FAILURES \
            -Djunit.platform.output.capture.stdout=true \
            -Djunit.platform.output.capture.stderr=true
        env:
          MAVEN_OPTS: -Xmx1024m -Dfile.encoding=UTF-8

      - name: Generar reportes Serenity
        if: always()
        run: mvn serenity:aggregate

      - name: Publicar resumen de pruebas
        if: always()
        run: |
          if [ -f target/site/serenity/summary.txt ]; then
            echo "## 📊 Resumen de Pruebas" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            cat target/site/serenity/summary.txt >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "## ⚠️ No se encontraron reportes de pruebas" >> $GITHUB_STEP_SUMMARY
            echo "Los tests no se ejecutaron o hubo un error en la configuración." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload reportes de Serenity
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: serenity-reports-${{ matrix.browser }}-java${{ matrix.java }}
          path: target/site/serenity/
          retention-days: 30

      - name: Upload screenshots en fallos
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: failure-screenshots-${{ matrix.browser }}
          path: target/site/serenity/screenshots/
          retention-days: 7

      - name: Upload Maven logs en fallos
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: maven-logs
          path: |
            target/surefire-reports/
            target/failsafe-reports/
            target/cucumber-reports/
          retention-days: 7

      - name: Comentar resultados en PR
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            let status = '✅';
            let statusText = 'exitosas';
            if (context.job.status !== 'success') {
              status = '❌';
              statusText = 'con fallos';
            }
            
            // Verificar si hay reportes generados
            const reportPath = path.join(process.env.GITHUB_WORKSPACE, 'target/site/serenity');
            let hasReports = false;
            try {
              hasReports = fs.existsSync(reportPath) && fs.readdirSync(reportPath).length > 0;
            } catch (e) {
              console.log('Error checking reports:', e.message);
            }
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ${status} Resultados de Pruebas Automatizadas
            
                Las pruebas de Serenity BDD han completado ${statusText}.
            
                ${hasReports ? '📊 **Reportes disponibles en los Artifacts del workflow**' : '⚠️ **No se generaron reportes - Ver logs para detalles**'}
                🔗 **[Ver detalles del workflow](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})**
            
                **Configuración:**
                - 🌐 Browser: Firefox
                - ☕ Java: 21
                - 🏷️ Tags: ${{ github.event.inputs.test_tags || '@SauceDemo' }}
                - 🧪 Framework: JUnit Platform + Cucumber`
            });

  notification:
    needs: test
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Notificar resultado
        run: |
          if [ "${{ needs.test.result }}" == "success" ]; then
            echo "✅ Todas las pruebas pasaron exitosamente"
            echo "## ✅ Build Exitoso" >> $GITHUB_STEP_SUMMARY
            echo "Todas las pruebas automatizadas pasaron correctamente." >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Algunas pruebas fallaron"
            echo "## ❌ Build Fallido" >> $GITHUB_STEP_SUMMARY
            echo "Revisa los reportes de Serenity para más detalles." >> $GITHUB_STEP_SUMMARY
            exit 1
          fi